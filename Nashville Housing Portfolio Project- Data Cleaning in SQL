/*
data cleaning in sql project 
*/



Select *
From PortfolioProject.dbo.NashvilleHousing



—populate property address data 


Select PropertyAddress  
From PortfolioProject.dbo.NashvilleHousing
—Where PropertyAddress is null 
Order by ParcelID



Select a.ParcelID, a.PropertyAddress,  b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
From PortfolioProject.dbo.NashvilleHousing a 
JOIN  PortfolioProject.dbo.NashvilleHousing b
ON a.ParcelID=b.ParcelID
AND a.[UniqueID]<>b.[UniqueID]
Where a.PropertyAddress is null

Update a
SET PropertyAddress=ISNULL(a.PropertyAddress,b.PropertyAddress)
From PortfolioProject.dbo.NashvilleHousing a 
JOIN  PortfolioProject.dbo.NashvilleHousing b
ON a.ParcelID=b.ParcelID
AND a.[UniqueID]<>b.[UniqueID]
Where a.PropertyAddress is null



—Breaking address Into separate columns bay address, city & state 

Select PropertyAddress  
From PortfolioProject.dbo.NashvilleHousing
 
SELECT 
SUBSTRING (PropertyAddress, 1 , CHARINDEX( ‘,’ , PropertyAddress)-1) as Address,
SUBSTRING (PropertyAddress, 1 , CHARINDEX( ‘,’ , PropertyAddress)+1, LEN(PropertyAddress)) as Address 

FROM PortfolioProject.dbo.NashvilleHousing


ALTER TABLE NashvilleHousing
ADD PropertySplitAddress Nvarchar(255);

UPDATE NashvilleHousing
SET PropertySplitAddress  = SUBSTRING (PropertyAddress, 1 , CHARINDEX( ‘,’ , PropertyAddress)-1)  

ALTER TABLE NashvilleHousing
ADD PropertySplitCity Nvarchar(255);

UPDATE NashvilleHousing
SET PropertySplitCity  =  SUBSTRING (PropertyAddress, 1 , CHARINDEX( ‘,’ , PropertyAddress)+1, LEN(PropertyAddress))  





Select OwnerAddress
From PortfolioProject.dbo.NashvilleHousing


Select  
PARSENAME(REPLACE(OwnerAddress, ‘,’ , ‘.’) ,3)
,PARSENAME(REPLACE(OwnerAddress, ‘,’ , ‘.’) ,2)
,PARSENAME(REPLACE(OwnerAddress, ‘,’ , ‘.’) ,1)
From PortfolioProject.dbo.NashvilleHousing



ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitAddress  = PARSENAME(REPLACE(OwnerAddress, ‘,’ , ‘.’) ,3)

ALTER TABLE NashvilleHousing
ADD OwnerSplitCity Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitCity  =  PARSENAME(REPLACE(OwnerAddress, ‘,’ , ‘.’) ,2)


ALTER TABLE NashvilleHousing
ADD OwnerSplitState Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ‘,’ , ‘.’) ,1)
 




—change Y and N to YES and NO in “Sold as Vacant” field


SELECT DISTINCT (SoldAsVacant), COUNT(SoldAsVacant)
FROM PortfolioProject.dbo.NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2


Select SoldAsVacant,
CASE when SoldAsVacant = ‘Y’ then ‘YES’
          when SoldAsVacant = ‘N’ then ‘NO’
ELSE SoldAsVacant
END
From PortfolioProject.dbo.NashvilleHousing

UPDATE NashvilleHousing
SET SoldAsVacant= CASE when SoldAsVacant = ‘Y’ then ‘YES’
          when SoldAsVacant = ‘N’ then ‘NO’
ELSE SoldAsVacant
END
 


—remove duplicates 


WITH RowNumCTE AS(

Select*,  ROW_NUMBER() OVER ( 
   PARTITION BY ParcelID, 
                            PropertyAddress,
                            SalePrice,
                            SaleDate,
                            LegalReference
ORDER BY UniqueID) row_num

From PortfolioProject.dbo.NashvilleHousing
ORDER BY ParcelID
)

DELETE 
FROM RowNumCTE
WHERE row_num>1
 


—delete unused columns


Select*
From  PortfolioProject.dbo.NashvilleHousing

ALTER TABLE  PortfolioProject.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
